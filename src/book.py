"""–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∫–Ω–∏–≥–∏"""

from telegram import InlineKeyboardButton, InlineKeyboardMarkup
from config import logger
from download import get_book_formats

def get_book_text(book: dict) -> str:
    """get_book_text"""
    logger.debug("get_book_text() start")

    if not book['id']:
        book['id'] = ""
    if not book['author']:
        book['author'] = ""
    if not book['series']:
        book['series'] = ""
    if not book['series_index']:
        book['series_index'] = ""
    if not book['publisher']:
        book['publisher'] = ""
    if not book['text']:
        book['text'] = ""
    if not book['tags']:
        book['tags'] = ""

    text = ""
    text += f"üìö –í—ã–±—Ä–∞–Ω–∞: <b>{book['title']}</b>\n"
    text += f"‚úçÔ∏è –ê–≤—Ç–æ—Ä: {book['author']}\n"
    text += f"üìñ –°–µ—Ä–∏—è: {book['series']} [{book['series_index']}]\n"
    if book['publisher']:
        text += f"–ò–∑–¥–∞—Ç–µ–ª—å: {book['publisher']}\n"
    text += f"–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä: {book['id']}\n"
    text += f"–ñ–∞–Ω—Ä: {book['tags']}\n"
    text += f"–û–ø–∏—Å–∞–Ω–∏–µ: <blockquote>{book['text'][:500]}</blockquote>\n"

    text += "\n–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ä–º–∞—Ç –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è:\n"
    text += "‚úÖ - –¥–æ—Å—Ç—É–ø–µ–Ω —Å—Ä–∞–∑—É\n"
    text += "üîÑ - –±—É–¥–µ—Ç —Å–∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω –∏–∑ –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞"
    return text

def book_selected(book):
    """book_selected"""
    logger.debug("book_selected() start")
    formats = get_book_formats(book['id'])
    all_formats = ['epub', 'mobi', 'fb2', 'txt', 'azw3']

    for fmt in formats:
        if fmt not in all_formats:
            all_formats.append(fmt)

    keyboard = []
    row = []
    for fmt in all_formats:
        available = fmt in formats
        emoji = "‚úÖ" if available else "üîÑ"
        row.append(
            InlineKeyboardButton(
                f"{emoji} {fmt.upper()}",
                callback_data=f"format_{fmt}"
            )
        )
        if len(row) == 2:
            keyboard.append(row)
            row = []
    if row:
        keyboard.append(row)

    keyboard.append([
        InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back"),
        InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel")
    ])

    reply_markup = InlineKeyboardMarkup(keyboard)

    text = get_book_text(book)

    return reply_markup, text
